<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato:
            dominio/api/nomeController
            http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto(_generoRepository) que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto(_generoRepository) para que haja referência aos métodos do repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            EndPoint que acessa o método de listar os gêneros
            </summary>
            <returns>uma lista de gêneros com um StatusCode</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetById(System.Int32)">
            <summary>
            Busca o gênero através do ID 
            </summary>
            <param name="id">ID do gênero a buscar</param>
            <returns>O objeto referente ao ID</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastra um novo gênero
            </summary>
            <param name="novoGenero">O objeto que será cadastrado</param>
            <returns>Um cadastro de objeto</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Deleta um gênero existente
            </summary>
            <param name="id">ID do gênero que será deletado</param>
            <returns>Exclusão do gênero</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o ID pela URL 
            </summary>
            <param name="id">ID do gênero que será atualizado e passado pela URL</param>
            <param name="generoAtualizado">Objeto já atualizado</param>
            <returns>Atualiza um gênero</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Gênero
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Uma de lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um filme pelo seu ID
            </summary>
            <param name="id">ID do objeto buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o ID passando pelo corpo da requisição
            </summary>
            <param name="filme">Objeto filme com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o ID pela URL da requisição
            </summary>
            <param name="id">ID do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="idFilme">ID do filme a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma de lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero pelo seu ID
            </summary>
            <param name="id">ID do objeto buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o ID passando pelo corpo da requisição
            </summary>
            <param name="genero">Objeto gênero com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o ID pela URL da requisição
            </summary>
            <param name="id">ID do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="idGenero">ID do gênero a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.GeneroRepository">
            <summary>
            Classe responsável pelo repositório dos gêneros
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados qu recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do baco 
            Autenticação:
                -   Windows: Integrated Security: True
                -   SQL SERVER: User Id = SA; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando o ID pelo corpo
            </summary>
            <param name="genero">Objeto com novas atualizações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza um gênero passando um ID pela URL
            </summary>
            <param name="id">ID do gênero que será atualizado</param>
            <param name="genero">objeto que será atualizado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deleta um gênero por ID
            </summary>
            <param name="id">ID do gênero que será deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo gênero
            </summary>
            <returns>Listas de objetos do tipo gênero</returns>
        </member>
    </members>
</doc>
