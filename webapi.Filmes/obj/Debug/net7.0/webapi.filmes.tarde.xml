<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que aciona o método de cadastrar um filme
            </summary>
            <param name="novoFilme"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Endpoint que aciona o método de deletar um filme
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Get">
            <summary>
            Endpoint que aciona um método de listar os filmes cadastrados
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint que chama o método buscar por ID no repository
            </summary>
            <param name="id">ID que será buscado</param>
            <returns>Retorna um status code 200 - Ok passando o objeto encontrado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que chama o método AtualizarIdCorpo do Repository
            </summary>
            <param name="filme">objeto com os novos valores</param>
            <returns>Status code 200 - Ok</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato:
            dominio/api/nomeController
            http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto(_generoRepository) que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto(_generoRepository) para que haja referência aos métodos do repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Get">
            <summary>
            Endpoint que aciona o método listarTodos do repositório e retorna a resposta para o usuário
            </summary>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            endpoint que aciona o metodo de cadastro do genero 
            </summary>
            <param name="novoGenero">objeto recebido na requisicao</param>
            <returns>StatusCode 201(Created)</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que aciona o método de deletar 
            </summary>
            <param name="id"> Parâmetro passado para encontrar o que deseja deletar </param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.SearchById(System.Int32)">
            <summary>
            Endpoint que aciona o método de buscar por ID
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Put(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que aciona o método de atualizar dados por ID no corpo
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutByUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que aciona método de atualizar dados por ID passando pela URL
            </summary>
            <param name="id"></param>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Gênero
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IFilmeRepository">
            <summary>
            
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Uma de lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um filme pelo seu ID
            </summary>
            <param name="id">ID do objeto buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o ID passando pelo corpo da requisição
            </summary>
            <param name="filme">Objeto filme com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o ID pela URL da requisição
            </summary>
            <param name="id">ID do objeto a ser atualizado</param>
            <param name="filme">Objeto com as novas informações</param>1
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="idFilme">ID do filme a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma de lista de objetos</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero pelo seu ID
            </summary>
            <param name="id">ID do objeto buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdCorpo(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o ID passando pelo corpo da requisição
            </summary>
            <param name="genero">Objeto gênero com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.AtualizarIdUrl(System.Int32,webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o ID pela URL da requisição
            </summary>
            <param name="id">ID do objeto a ser atualizado</param>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="idGenero">ID do gênero a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Método que busca um objeto através do seu ID
            </summary>
            <param name="id">Id do filme que será procurado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Repositories.GeneroRepository">
            <summary>
            Classe responsável pelo repositório dos gêneros
            </summary>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados qu recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do baco 
            Autenticação:
                -   Windows: Integrated Security: True
                -   SQL SERVER: User Id = SA; Pwd = Senha
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)" -->
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Método para listar todos os objetos gêneros
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
