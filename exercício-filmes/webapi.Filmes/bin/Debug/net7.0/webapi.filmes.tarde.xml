<?xml version="1.0"?>
<doc>
    <assembly>
        <name>webapi.filmes.tarde</name>
    </assembly>
    <members>
        <member name="T:webapi.filmes.tarde.Controllers.FilmeController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.FilmeController._filmeRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.#ctor">
            <summary>
            Instância do objeto _filmeRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetAll">
            <summary>
            Endpoint que acessa o método de listar os filmes
            </summary>
            <returns>Lista de gêneros e um Status Code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.GetById(System.Int32)">
            <summary>
            Endpoint que acesso o método de buscar filme a partir de um ID
            </summary>
            <returns>Gênero encontrado e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Post(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar filme
            </summary>
            <param name="idGenero">Id do Gênero do filme</param>
            <param name="tituloFilme">Título do filme</param>
            <returns>Filme a ser cadastrado e status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar filme
            </summary>
            <param name="id">Id do filme a ser deletado</param>
            <returns>Id do filme deletado e status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutIdBody(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Endpoint que acessa o método de atualizar filme através do corpo da requisição
            </summary>
            <param name="filme">Filme a ser atualizado</param>
            <returns>Status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.FilmeController.PutIdUrl(System.Int32,System.String)">
            <summary>
            Endpoint que acessa o método de atualizar filme através da URL
            </summary>
            <param name="id">Id do filme a ser atualizado</param>
            <param name="titulo">Novo título do filme</param>
            <returns>Status code</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Controllers.GeneroController">
            <summary>
            Define que a rota de uma requisição será no seguinte formato
            dominio/api/nomeController
            exemplo: http://localhost:5000/api/Genero
            </summary>
        </member>
        <member name="P:webapi.filmes.tarde.Controllers.GeneroController._generoRepository">
            <summary>
            Objeto que irá receber os métodos definidos na interface
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.#ctor">
            <summary>
            Instância do objeto _generoRepository para que haja referência aos métodos no repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetAll">
            <summary>
            Endpoint que acessa o método de listar os gêneros
            </summary>
            <returns>Lista de gêneros e um Status Code</returns>
            
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.GetById(System.Int32)">
            <summary>
            Endpoint que acesso o método de buscar gênero a partir de um ID
            </summary>
            <returns>Gênero encontrado e um status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Post(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de cadastrar gênero
            </summary>
            <returns>Gênero a ser cadastrado e status code</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.Delete(System.Int32)">
            <summary>
            Endpoint que acessa o método de deletar gênero
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutIdBody(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Endpoint que acessa o método de atualizar gênero através do corpo da requisição
            </summary>
            <param name="genero"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.GeneroController.PutIdUrl(System.Int32,System.String)">
            <summary>
            Endpoint que acessa o método de atualizar gênero através da URL
            </summary>
            <param name="id"></param>
            <param name="nome"></param>
            <returns></returns>
        </member>
        <member name="M:webapi.filmes.tarde.Controllers.UsuarioController.Logar(webapi.filmes.tarde.Domains.UsuarioDomain)">
            <summary>
            Endpoint que aciona o método login no repositório
            </summary>
            <param name="email">email do usuário</param>
            <param name="senha">senha do usuário</param>
            <returns>retorna a resposta para o usuário(front-end)</returns>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.FilmeDomain">
            <summary>
            Classe que representa a entidade(tabela) Filme
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Domains.GeneroDomain">
            <summary>
            Classe que representa a entidade(tabela) Genero
            </summary>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IFilmeRepository">
            <summary>
            Interface responsável pelo repositório FilmeRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.ListarTodos">
            <summary>
            Retornar todos os filmes cadastrados
            </summary>
            <returns>Lista de filmes</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através de seu Id
            </summary>
            <param name="id">Id do objeto e será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Atualizar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Atualizar um filme existente passando o id pelo corpo da requisição
            </summary>
            <param name="filme">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IFilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="T:webapi.filmes.tarde.Interfaces.IGeneroRepository">
            <summary>
            Interface responsável pelo repositório GeneroRepository
            Define os métodos que serão implementados pelo repositório
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.ListarTodos">
            <summary>
            Retornar todos os gêneros cadastrados
            </summary>
            <returns>Uma lista de gêneros</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um objeto através de seu Id
            </summary>
            <param name="id">Id do objeto que será buscado</param>
            <returns>Objeto que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Atualizar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualizar um gênero existente passando o id pelo corpo da requisição
            </summary>
            <param name="genero">Objeto com as novas informações</param>
        </member>
        <member name="M:webapi.filmes.tarde.Interfaces.IGeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id">Id do objeto a ser deletado</param>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.FilmeRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação:
                - Windows: Integrated Security = True
                - SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero a partir de um id
            </summary>
            <param name="id">Id do gênero a ser buscado</param>
            <returns>Gênero que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Cadastrar(webapi.filmes.tarde.Domains.FilmeDomain)">
            <summary>
            Cadastrar um novo filme
            </summary>
            <param name="novoFilme">Objeto da classe Filme que será cadastrado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.Deletar(System.Int32)">
            <summary>
            Deletar um filme existente
            </summary>
            <param name="id">Id do filme a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.FilmeRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo Filme
            </summary>
            <returns>Lista de objetos do tipo Filme</returns>
        </member>
        <member name="F:webapi.filmes.tarde.Repositories.GeneroRepository.StringConexao">
            <summary>
            String de conexão com o banco de dados que recebe os seguintes parâmetros:
            Data Source: Nome do servidor do banco
            Initial Catalog: Nome do banco de dados
            Autenticação:
                - Windows: Integrated Security = True
                - SqlServer: User Id = sa; Pwd = Senha
            </summary>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Atualizar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Atualiza as informações de um gênero
            </summary>
            <param name="genero">Gênero a ser atualizado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.BuscarPorId(System.Int32)">
            <summary>
            Buscar um gênero a partir de um id
            </summary>
            <param name="id">Id do gênero a ser buscado</param>
            <returns>Gênero que foi buscado</returns>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Cadastrar(webapi.filmes.tarde.Domains.GeneroDomain)">
            <summary>
            Cadastrar um novo gênero
            </summary>
            <param name="novoGenero">Objeto com as informações que serão cadastradas</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.Deletar(System.Int32)">
            <summary>
            Deletar um gênero existente
            </summary>
            <param name="id">Id do gênero a ser deletado</param>
        </member>
        <member name="M:webapi.filmes.tarde.Repositories.GeneroRepository.ListarTodos">
            <summary>
            Listar todos os objetos do tipo Gênero
            </summary>
            <returns>Lista de objetos do tipo Gênero</returns>
        </member>
    </members>
</doc>
